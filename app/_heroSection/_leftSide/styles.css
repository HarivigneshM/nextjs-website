.typewriter {
  color: #fff;
}

.typewriter h1 {
  overflow: hidden;
  border-right: 0.15em solid #f6af61;
  white-space: nowrap;
  letter-spacing: 0.1em;
  animation: typing-h1 3.5s steps(40, end), blink-caret 0.75s step-end infinite, remove-caret 0s 3.5s forwards;
}

.typewriter h3 {
  overflow: hidden;
  white-space: nowrap;
  letter-spacing: 0.1em;
  visibility: hidden; /* Initially hide the h3 */
}

.typewriter h3:nth-child(2) {
  animation: show-h3 0s 3.5s forwards, typing-h3 5s steps(60, end) 3.5s, blink-caret 0.75s step-end infinite, remove-caret 3.5s 3.5s forwards;
}

.typewriter h3:nth-child(3) {
  animation: show-h3 5s 8.5s forwards, typing-h3 5s steps(60, end) 8.5s, blink-caret 0.75s step-end infinite;
}

/* Keyframes */
@keyframes remove-caret {
  to {
    border-right: none;
  }
}

@keyframes show-h3 {
  to {
    border-right: 0.15em solid #f6af61;
    visibility: visible;
  }
}

@keyframes typing-h1 {
  from {
    width: 0;
  }
  to {
    width: 100%;
  }
}

@keyframes typing-h3 {
  from {
    width: 0;
  }
  to {
    width: 100%;
  }
}

@keyframes blink-caret {
  from,
  to {
    border-color: transparent;
  }
  50% {
    border-color: #f6af61;
  }
}


.sparkle-button {
    --active: 0;
    --bg: radial-gradient(
              40% 50% at center 100%,
              hsl(270 calc(var(--active) * 97%) 72% / var(--active)),
              transparent
          ),
          radial-gradient(
              80% 100% at center 120%,
              hsl(260 calc(var(--active) * 97%) 70% / var(--active)),
              transparent
          ),
          hsl(260 calc(var(--active) * 97%) calc((var(--active) * 44%) + 12%));
    background: var(--bg);
    font-size: 1.2rem;
    font-weight: 500;
    border: 0;
    cursor: pointer;
    padding: 1em 1em;
    display: flex;
    align-items: center;
    gap: 0.25em;
    white-space: nowrap;
    border-radius: 100px;
    position: relative;
    box-shadow: 0 0 calc(var(--active) * 3em) calc(var(--active) * 1em) hsl(260 97% 61% / 0.75),
          0 0em 0 0 hsl(260 calc(var(--active) * 97%) calc((var(--active) * 50%) + 30%)) inset,
          0 -0.05em 0 0 hsl(260 calc(var(--active) * 97%) calc(var(--active) * 60%)) inset;
    transition: box-shadow var(--transition), scale var(--transition), background var(--transition);
    scale: calc(1 + (var(--active) * 0.1));
    transition: .3s;
  }
  
  .sparkle-button:active {
    scale: 1;
    transition: .3s;
  }
  
  .sparkle path {
    color: hsl(0 0% calc((var(--active, 0) * 70%) + var(--base)));
    transform-box: fill-box;
    transform-origin: center;
    fill: currentColor;
    stroke: currentColor;
    animation-delay: calc((var(--transition) * 1.5) + (var(--delay) * 1s));
    animation-duration: 0.6s;
    transition: color var(--transition);
  }
  
  .sparkle-button:is(:hover, :focus-visible) path {
    animation-name: bounce;
  }
  
  @keyframes bounce {
    35%, 65% {
      scale: var(--scale);
    }
  }
  
  .sparkle path:nth-of-type(1) {
    --scale: 0.5;
    --delay: 0.1;
    --base: 40%;
  }
  
  .sparkle path:nth-of-type(2) {
    --scale: 1.5;
    --delay: 0.2;
    --base: 20%;
  }
  
  .sparkle path:nth-of-type(3) {
    --scale: 2.5;
    --delay: 0.35;
    --base: 30%;
  }
  
  .sparkle-button:before {
    content: "";
    position: absolute;
    inset: -0.2em;
    z-index: -1;
    border: 0.25em solid hsl(260 97% 50% / 0.5);
    border-radius: 100px;
    opacity: var(--active, 0);
    transition: opacity var(--transition);
  }
  
  .spark {
    position: absolute;
    inset: 0;
    border-radius: 100px;
    rotate: 0deg;
    overflow: hidden;
    mask: linear-gradient(white, transparent 50%);
    animation: flip calc(var(--spark) * 2) infinite steps(2, end);
  }
  
  @keyframes flip {
    to {
      rotate: 360deg;
    }
  }
  
  .spark:before {
    content: "";
    position: absolute;
    width: 200%;
    aspect-ratio: 1;
    top: 0%;
    left: 50%;
    z-index: -1;
    translate: -50% -15%;
    rotate: 0;
    transform: rotate(-90deg);
    opacity: calc((var(--active)) + 0.4);
    background: conic-gradient(
          from 0deg,
          transparent 0 340deg,
          white 360deg
      );
    transition: opacity var(--transition);
    animation: rotate var(--spark) linear infinite both;
  }
  
  .spark:after {
    content: "";
    position: absolute;
    inset: var(--cut);
    border-radius: 100px;
  }
  
  .backdrop {
    position: absolute;
    inset: var(--cut);
    background: var(--bg);
    border-radius: 100px;
    transition: background var(--transition);
  }
  
  @keyframes rotate {
    to {
      transform: rotate(90deg);
    }
  }
  
  @supports(selector(:has(:is(+ *)))) {
    body:has(button:is(:hover, :focus-visible)) {
      --active: 1;
      --play-state: running;
    }
  
    .bodydrop {
      display: none;
    }
  }
  
  .sparkle-button:is(:hover, :focus-visible) ~ :is(.bodydrop, .particle-pen) {
    --active: 1;
    --play-state: runnin;
  }
  
  .sparkle-button:is(:hover, :focus-visible) {
    --active: 1;
    --play-state: running;
  }
  
  .sp {
    position: relative;
    margin:3%;
  }
  
  .particle-pen {
    position: absolute;
    width: 200%;
    aspect-ratio: 1;
    top: 50%;
    left: 50%;
    translate: -50% -50%;
    -webkit-mask: radial-gradient(white, transparent 65%);
    z-index: -1;
    opacity: var(--active, 0);
    transition: opacity var(--transition);
  }
  
  .particle {
    fill: white;
    width: calc(var(--size, 0.25) * 1rem);
    aspect-ratio: 1;
    position: absolute;
    top: calc(var(--y) * 1%);
    left: calc(var(--x) * 1%);
    opacity: var(--alpha, 1);
    animation: float-out calc(var(--duration, 1) * 1s) calc(var(--delay) * -1s) infinite linear;
    transform-origin: var(--origin-x, 1000%) var(--origin-y, 1000%);
    z-index: -1;
    animation-play-state: var(--play-state, paused);
  }
  
  .particle path {
    fill: hsl(0 0% 90%);
    stroke: none;
  }
  
  .particle:nth-of-type(even) {
    animation-direction: reverse;
  }
  
  @keyframes float-out {
    to {
      rotate: 360deg;
    }
  }
  
  .text {
    translate: 2% -6%;
    letter-spacing: 0.01ch;
    background: linear-gradient(90deg, hsl(0 0% calc((var(--active) * 100%) + 65%)), hsl(0 0% calc((var(--active) * 100%) + 26%)));
    -webkit-background-clip: text;
    color: transparent;
    transition: background var(--transition);
  }
  
  .sparkle-button svg {
    inline-size: 1.25em;
    translate: -25% -5%;
  }
.input-container {
  position: relative;
  display: flex;
  margin: 3%;
  height: 2em;
  justify-content: center;
  align-items: center;
  box-sizing: border-box;
  width: 16.5em;
  border-radius: 20px;
    background-image: linear-gradient(to right bottom, #e300ff, #ff00aa, #ff5956, #ffb900, #fffe00);
  box-shadow: -25px -10px 30px -5px rgba(225, 0, 255, 0.5),
    25px -10px 30px -5px rgba(255, 0, 212, 0.5),
    25px 10px 30px -5px rgba(255, 174, 0, 0.5),
    -25px 10px 30px -5px rgba(255, 230, 0, 0.5);
  padding: 4px;
}

.mainbox {
  box-sizing: border-box;
  position: relative;
  display: flex;
  width: 100%;
  flex-direction: row-reverse;
  align-items: center;
  justify-content: center;
  border-radius: 160px;
  transition: all 0.3s ease;
}

.checkbox:focus {
  border: none;
  outline: none;
}

.checkbox:checked {
  right: 10px;
}

.checkbox:checked ~ .mainbox {
  width: 50px;
}

.checkbox:checked ~ .mainbox .search_input {
  width: 0;
  height: 0px;
}

.checkbox:checked ~ .mainbox .iconContainer {
  padding-right: 8px;
}

.checkbox {
  box-sizing: border-box;
  width: 30px;
  height: 30px;
  position: absolute;
  right: 17px;
  top: 10px;
  z-index: 9;
  cursor: pointer;
  appearance: none;
}

.search_input {
  box-sizing: border-box;
  height: 100%;
  background-color: transparent;
  border: none;
  padding-left: 1%;
  background-color: black;
  outline: none;
  width: 100%;
  border-radius: 20px;
  transition: all 0.3s ease;
  font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
}

.search_input::placeholder {
  color: rgba(255, 255, 255, 0.776);
}
input[type='text'] {
  background-color: #000000;
  font-size: 0.8em;
  height: 2em;
  width: 15em;
  border-radius: 20px;
  position: relative;
  border: none;
  color: white;
  outline: 0;
  overflow: hidden;
}
.iconContainer {
  box-sizing: border-box;
  padding-top: 5px;
  width: fit-content;
  transition: all 0.3s ease;
}

.search_icon {
  box-sizing: border-box;
  fill: white;
  font-size: 1.3em;
}
.SendSVG:hover {
  background-color: #2b2b35;
}
.SendSVG {
  width: 30px;
  height: 30px;
  border-radius: 10px;
}
